/*
Copyright 2024 SUSE Rancher

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by main. DO NOT EDIT.

// +k8s:deepcopy-gen=package
// +groupName=macvlan.cluster.cattle.io
package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// MacvlanIPList is a list of MacvlanIP resources
type MacvlanIPList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []MacvlanIP `json:"items"`
}

func NewMacvlanIP(namespace, name string, obj MacvlanIP) *MacvlanIP {
	obj.APIVersion, obj.Kind = SchemeGroupVersion.WithKind("MacvlanIP").ToAPIVersionAndKind()
	obj.Name = name
	obj.Namespace = namespace
	return &obj
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

// MacvlanSubnetList is a list of MacvlanSubnet resources
type MacvlanSubnetList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata"`

	Items []MacvlanSubnet `json:"items"`
}

func NewMacvlanSubnet(namespace, name string, obj MacvlanSubnet) *MacvlanSubnet {
	obj.APIVersion, obj.Kind = SchemeGroupVersion.WithKind("MacvlanSubnet").ToAPIVersionAndKind()
	obj.Name = name
	obj.Namespace = namespace
	return &obj
}
