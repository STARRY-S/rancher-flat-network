apiVersion: apps/v1
kind: Deployment
metadata:
  name: rancher-flat-network-operator
  namespace: kube-system
  labels:
    app: rancher-flat-network-operator
spec:
  replicas: {{ .Values.flatNetworkOperator.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: rancher-flat-network-operator
  template:
    metadata:
      namespace: kube-system
      labels:
        app: rancher-flat-network-operator
    spec:
      serviceAccountName: multus
      initContainers:
      - name: webhook-admission-deploy
        image: {{ template "system_default_registry" . }}{{ .Values.webhookDeploy.image.repository }}:{{ .Values.webhookDeploy.image.tag }}
        imagePullPolicy: {{ .Values.webhookDeploy.image.pullPolicy }}
        env:
        - name: IS_OPERATOR_INIT_CONTROLLER
          value: "true"
      containers:
      - name: rancher-flat-network-operator-container
        image: {{ template "system_default_registry" . }}{{ .Values.flatNetworkOperator.image.repository }}:{{ .Values.flatNetworkOperator.image.tag }}
        imagePullPolicy: {{ .Values.flatNetworkOperator.image.pullPolicy }}
        env:
        - name: CATTLE_RESYNC_DEFAULT
          value: ""
        - name: CATTLE_DEV_MODE
          value: ""
        - name: CATTLE_ELECTION_LEASE_DURATION
          value: ""
        resources:
          limits:
            memory: {{ .Values.flatNetworkOperator.limits.memory | quote }}
        volumeMounts:
        - name: webhook-certs
          mountPath: /etc/webhook/certs
        livenessProbe:
          httpGet:
            path: /ping
            port: 443
            scheme: HTTPS
          initialDelaySeconds: 3
          periodSeconds: 5
      volumes:
      - name: webhook-certs
        secret:
          secretName: rancher-flat-network-webhook-certs

---
apiVersion: v1
kind: Service
metadata:
  name: rancher-flat-network-webhook-svc
  namespace: kube-system
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    app: rancher-flat-network-operator
