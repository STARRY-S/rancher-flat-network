#
# https://github.com/k8snetworkplumbingwg/multus-cni/blob/v4.0.2/deployments/multus-daemonset.yml
#
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: network-attachment-definitions.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  scope: Namespaced
  names:
    plural: network-attachment-definitions
    singular: network-attachment-definition
    kind: NetworkAttachmentDefinition
    shortNames:
    - net-attach-def
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: 'NetworkAttachmentDefinition is a CRD schema specified by the Network Plumbing
            Working Group to express the intent for attaching pods to one or more logical or physical
            networks. More information available at: https://github.com/k8snetworkplumbingwg/multi-net-spec'
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this represen
                tation of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'NetworkAttachmentDefinition spec defines the desired state of a network attachment'
              type: object
              properties:
                config:
                  description: 'NetworkAttachmentDefinition config is a JSON-formatted CNI configuration'
                  type: string
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rancher-flat-network-multus
  annotations:
    "helm.sh/resource-policy": keep
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: rancher-flat-network-multus
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rancher-flat-network-multus
  namespace: kube-system
  annotations:
    "helm.sh/resource-policy": keep
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-multus-ds
  namespace: kube-system
  labels:
    tier: node
    app: multus
    name: multus
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: multus
  template:
    metadata:
      labels:
        tier: node
        app: multus
        name: multus
    spec:
      hostNetwork: true
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      serviceAccountName: rancher-flat-network-multus
      initContainers:
      - name: init-multus-config
        image: {{ template "system_default_registry" . }}{{ .Values.deploy.image.repository }}:{{ .Values.deploy.image.tag }}
        imagePullPolicy: {{ .Values.deploy.image.pullPolicy }}
        command: ["/entrypoint.sh"]
        volumeMounts:
        - name: cni
          mountPath: /host/etc/cni/net.d
        env:
        - name: IS_MULTUS_INIT_CONTAINER
          value: "true"
      containers:
      - name: kube-multus
        image: {{ template "system_default_registry" . }}{{ .Values.multus.image.repository }}:{{ .Values.multus.image.tag }}
        imagePullPolicy: {{ .Values.multus.image.pullPolicy }}
        command: ["/thin_entrypoint"]
        args:
        - "--multus-conf-file=auto"
        - --cni-version={{ .Values.multus.cni.version }}
        - "--multus-autoconfig-dir=/host/etc/cni/net.d"
        - "--cni-conf-dir=/host/etc/cni/net.d"
        - --multus-kubeconfig-file-host={{ template "multus_cniconf_kubeconfig" . }}
        resources:
          requests:
            cpu: "100m"
            memory: "50Mi"
          limits:
            cpu: "100m"
            memory: "50Mi"
        securityContext:
          privileged: true
        volumeMounts:
        - name: cni
          mountPath: /host/etc/cni/net.d
        - name: cnibin
          mountPath: /host/opt/cni/bin
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cni
          hostPath:
            path: {{ template "multus_cniconf_host_path" . }}
        - name: cnibin
          hostPath:
            path: {{ template "multus_cnibin_host_path" . }}
      nodeSelector:
        kubernetes.io/os: linux
